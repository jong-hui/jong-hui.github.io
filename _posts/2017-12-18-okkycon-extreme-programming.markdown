---
layout: post
title:  "[OKKYCON] eXtreme Programming, 더 나은 소프트웨어 품질을 위한 일의 방법"
subtitle:   "okkycon"
categories: review
tags: event
comments: true
---

pivotal

오픈소스 회사, 톰캣, 자스민, 스프링, 자바 등등

---

소프트웨어가 없는 산업이 없다.

api형태로 서비스를 전달하는대에 필요한 기술, 협업, 문화 등등이 기존의 산업들과 다르다.

소프트웨어 팀이 어떻게 달라져야 하는가?

제대로 된 투비 모델이 없음.

개발팀에 인프라가, 인프라팀에 코드 오더가 가는 경우가 많음.

제대로 된 이해가 없는 상태

---

애자일, 린, ... 등등 결국엔 제품이다.

개발 산출물을 어떻게 프로덕션에 쉬핑할 것이냐.

애자일 - 개발에서 배포까지 수행하고 피드백을 받는 동작을 반복하는 것

린 - 애자일을 사용자가 원하는 방향으로 가는것 ( 피드백 반영 )

---

실예

작은 팀 ( 2피자 팀 ) / 크로스 펑셔널 팀 ( 풀스택은 현실적으로 어려움 )

대표, 프론트, 백, 인프라 

4이 수평적 관계였음.

---

문제

- 데이터 복제 /백업 없음
- 오픈스택의 빠른발전으로 api
- 개발 스테이징 프로덕션 개념 없음
- 배포 전 테스트, 테스트코드 없음
- 프로덕션에 마구 접속 및 변경
- 개성이 강한 멤버
- 서비스가 커비조, 실 사용자가 유입되어서 문제 됨.

---

작은 규모의 팀은 효율적이다

서로다른 전문성을 가진 사람들이 팀을 이루면 어려운 문제를 해결할 수 있다.

문제를 즉각 공유해야 해결이 빠르다

감정적문제가 커지는 경향이 있다.

제품이 나빠서가 아니라, 팀이 깨져서 무너지는 경우가 많다.

---

다음 업데이트에 무슨 문제가 발생할지 모름

메일보다 대화

