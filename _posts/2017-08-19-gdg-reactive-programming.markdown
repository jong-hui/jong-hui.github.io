---
layout: post
title:  "[GDG] - Reactive Programming"
subtitle:   "Google Developers Group Campus Summer Party"
categories: review
tags: event
comments: true
---

쉽고재미있는 Reactive Programming

진인사 컴퍼니 - 인공지능 로봇

## 반응형 프로그래밍

명령형 프로그래밍 - 컨트롤이 흐른다. 한줄한줄 위에서 아래로

컨트롤이 아니라 데이터가 흐르면 어떻게 될까? (트위터)

프로그램 - 하나의 작업을 함수하나가, 프로그램은 그 함수의 집합

데이터가 함수 사이사이에 흐르도록 설계

73년에 이미 나온 개념.

그 당시 이미 논의가 있었음.

당시엔 컨트롤플로우가 이김.

얼마전까진 안좋은 상황도 용인됬음.

동시성을 감당하기 위해 생각하는 방식을 바꾸어야함.

### 리엑티브의 세상

명령형이 아닌 선언형

순차적이 아닌 동시적프로그래밍

선언형? - 어떤 방법으로 처리하는지가 아니라 무엇과 같은지를 설명하는 방식

쉽게말해 이벤트가 발생하면 어떠하게 반응할지 블루프린트를 만들어 놓는것이다.

### 리엑티브

사용자에 대한 반응, 장애에 대한 반응, 부하에대한 반응, ?

Monad - 값과 문맥의 결합

이걸 왜 써야하는데?

어떠한 값이 오더라도 문맥을 유지하고 내가 원하는 로직을 실행시킬 수 있다.

함수형 반응형 프로그래밍

### 옵져버블

서브젝트의 노티파이를 옵져버가 받는거.

백프레셔 - 클라이언트에게 맞게 적당히 내려주는거.
